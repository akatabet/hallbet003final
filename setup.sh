#!/bin/bash

echo "üöÄ Corrigindo ambiente de backend..."

# 1. Verifica se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Instale e tente novamente."
    exit 1
fi

# 2. Verifica se npm est√° instalado
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm n√£o est√° instalado. Instale o Node.js corretamente."
    exit 1
fi

# 3. Instala depend√™ncias
echo "üì¶ Instalando depend√™ncias..."
npm install

# 4. Verifica se o arquivo .env existe
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Criando um arquivo de exemplo..."
    cat > .env <<EOL
DB_NAME=u623447797_hallbet003
DB_USER=u623447797_hallbetadmin
DB_PASSWORD=Sd12.2003
DB_HOST=srv725.hstgr.io
DB_PORT=3306
PORT=10000
JWT_SECRET=segredo_super_secreto_123
EOL
    echo "‚úÖ Arquivo .env criado!"
else
    echo "‚úÖ .env j√° existe."
fi

# 5. Exporta vari√°veis do .env
export $(cat .env | xargs)

# 6. Testa conex√£o com banco
echo "üß™ Testando conex√£o com MySQL..."
if command -v mysql &> /dev/null; then
    mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD -e "USE $DB_NAME;" &> /dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ Conex√£o com o banco OK!"
    else
        echo "‚ùå Falha na conex√£o com o banco. Verifique usu√°rio, senha ou host no .env."
    fi
else
    echo "‚ö†Ô∏è Comando mysql n√£o dispon√≠vel no Bash. Use CMD ou PowerShell para testar a conex√£o com o banco."
fi

# 7. Inicia o servidor Node.js
echo "üöÄ Iniciando servidor Node.js..."
node index.js
